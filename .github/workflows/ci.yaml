name: CI tests

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-2022

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ${{ github.workspace }}/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.sln*', '**/*.csproj*') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
     
    - name: Restore NuGet packages
      run: |
        nuget restore PdfToImageConverter.csproj -ConfigFile nuget.config

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v2
    
    - name: Build solution for testing
      run: |
        dotnet build PdfToImageConverter.csproj --configuration Debug

    - name: Install ILRepack and merge DLLs
      run: |
        nuget install ILRepack -Version 2.0.18 -OutputDirectory ${{ github.workspace }}\packages
        $buildPath = "${{ github.workspace }}\bin\Debug\net481"
        ${{ github.workspace }}\packages\ILRepack.2.0.18\tools\ILRepack.exe /out:"$buildPath\merged\PdfToImageConverter.dll" `
                /lib:"$buildPath" `
                /targetplatform:"v4,C:\Windows\Microsoft.NET\Framework64\v4.0.30319" `
                /union `
                /copyattrs `
                /internalize `
                "$buildPath\PdfToImageConverter.dll" `
                "$buildPath\Microsoft.Extensions.Logging.Abstractions.dll" `
                "$buildPath\PDFtoImage.dll" `
                "$buildPath\SkiaSharp.dll" `
                "$buildPath\System.Buffers.dll" `
                "$buildPath\System.Memory.dll" `
                "$buildPath\System.Numerics.Vectors.dll" `
                "$buildPath\System.Runtime.CompilerServices.Unsafe.dll"

    - name: Prepare test execution
      run: |
        $buildPath = "${{ github.workspace }}\bin\Debug\net481"
        Remove-Item -Path $buildPath\PdfToImageConverter.dll -Force
        Remove-Item -Path $buildPath\Microsoft.Extensions.Logging.Abstractions.dll -Force
        Remove-Item -Path $buildPath\PDFtoImage.dll -Force
        Remove-Item -Path $buildPath\SkiaSharp.dll -Force
        Remove-Item -Path $buildPath\System.Buffers.dll -Force
        Remove-Item -Path $buildPath\System.Memory.dll -Force
        Remove-Item -Path $buildPath\System.Numerics.Vectors.dll -Force
        Remove-Item -Path $buildPath\System.Runtime.CompilerServices.Unsafe.dll -Force
        Move-Item -Path $buildPath\merged\PdfToImageConverter.dll -Destination $buildPath

    - name: Run Integration Test 1 (test_converter.ps1)
      shell: pwsh
      run: |
        cd test
        $output = .\test_converter.ps1 *>&1
        $output | ForEach-Object { Write-Host $_ }
        
        $hasErrors = $output | Where-Object { 
            $_ -like "*Error:*" -or 
            $_ -like "*Error processing first page:*"  -or
            $_ -like "*Error Type:*"
        }
        if ($hasErrors) {
            Write-Error "Test failed with errors:"
            $hasErrors | ForEach-Object { Write-Error $_ }
            exit 1
        }
        Write-Host "Test 1 completed successfully"
    
    - name: Run Integration Test 2 (test_converter_with_page_names.ps1)
      shell: pwsh
      run: |
        cd test
        $output = .\test_converter_with_page_names.ps1 *>&1
        $output | ForEach-Object { Write-Host $_ }

        $hasErrors = $output | Where-Object { 
            $_ -like "*Error:*" -or 
            $_ -like "*Error processing page:*" 
        }
        if ($hasErrors) {
            Write-Error "Test failed with errors:"
            $hasErrors | ForEach-Object { Write-Error $_ }
            exit 1
        }
        Write-Host "Test 2 completed successfully"
